//https://leetcode.com/problems/implement-queue-using-stacks/


--------------------------------------------TC: O(1) (Amotized time complexity: complexity most of the time)

--------------------------------------------SC: O(2N)



class MyQueue {
public:
    stack<int> s1;
    stack<int> s2;
    
    
    MyQueue() {
        
    }
    
    void push(int x) {
        s1.push(x);
    }
    
    int pop() {
        if (!s2.empty()){
            int curr = s2.top();
            s2.pop();
            return curr;
            
        }
        else{
            while(!s1.empty()){
                s2.push(s1.top());
                s1.pop();
            }
            
            int curr = s2.top();
            s2.pop();
            return curr;
            
        }
        
    }
    
    int peek() {
        if (!s2.empty()){
            
            return s2.top();
            
        }
        else{
            while(!s1.empty()){
                s2.push(s1.top());
                s1.pop();
            }
                      
            return s2.top();
            
        }
                
    }
    
    bool empty() {
        
        if (s1.empty() && s2.empty()){
            return true;
        }
        else{
            return false;
        }
        
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */
