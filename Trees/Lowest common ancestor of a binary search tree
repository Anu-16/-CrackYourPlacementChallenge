//https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/submissions/

//TC: O(H) where H is height of binary tree

TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        
        int large = max(p->val, q->val);
        int small = min(p->val, q->val);
        
        while (root != NULL) {
        
            if(root->val > large){
                root = root->left;
            }
            else if(root->val < small){
                root = root->right;
            }
            else{
                return root;
            }
        }
        
        return NULL;
        
    }
