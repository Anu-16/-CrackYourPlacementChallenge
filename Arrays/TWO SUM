//https://leetcode.com/problems/two-sum/

--------------------------------------------------------BRUTE FORCE: O(N2)--------------------------------------------------------


vector<int> twoSum(vector<int>& nums, int target) {
        
	    vector <int> pos;
        for (int i=0; i<nums.size()-1; i++){
            for(int j=i+1; j<nums.size(); j++){
                
                if(nums[i]+nums[j]==target){
                    pos.push_back(i);
                    pos.push_back(j);
                }
                
                
            }
        }
	    
		return pos;
        
    }
    
--------------------------------------------------------  O(N)-------------------------------------------------------- 

    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map <int, int> ump;
	    vector <int> pos;
	    for (int i=0; i<nums.size(); i++){
		    if (ump.find(target - nums[i])!=ump.end()){
			    pos.push_back(ump[target-nums[i]]);
			    pos.push_back (i);
			    return pos;
		    }
		
		    ump[nums[i]] = i;
        }
		
        return pos;
    }
