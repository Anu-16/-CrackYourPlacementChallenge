//https://leetcode.com/problems/sort-colors/

// ------------------------- ---------- ----------Brute force (accepted) TC:O(N)  ---------- ---------- ---------- ---------- ---------- ----------

// not modifying the array in place
void sortColors(vector<int>& nums) {
        int zero_count = 0;
        int one_count = 0;
        int two_count = 0;
        
        for(int i=0; i<nums.size(); i++){
            if (nums[i]==0){
                zero_count++;
            }
            else if (nums[i]==1){
                one_count++;
            }
            else{
                two_count++;
            }
        }
        
        for (int j=0; j<zero_count; j++){
            nums[j] = 0;
        }
        
        for (int k=zero_count; k<zero_count + one_count; k++){
            nums[k] = 1;
        }
        
        for (int m=zero_count + one_count; m<zero_count + one_count + two_count; m++){
            nums[m] = 2;
        }
        
    }
    
    
    
    ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
    ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
    ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
    ------------- ------------- ------------- -------------Single pass in-place traversal---------- ------------- -------------
    
    int low = 0;
        int mid = 0;
        int high = nums.size()-1;
        
        while (mid<= high){
            if (nums[mid]==0){
                swap(nums[low], nums[mid]);
                low++;
                mid++;
            }
            else if (nums[mid]==2){
                swap(nums[mid], nums[high]);
               
                high--;
            }
            else{
                mid++;
            }
        }
    
    
